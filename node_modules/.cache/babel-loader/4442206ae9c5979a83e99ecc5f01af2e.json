{"ast":null,"code":"var _jsxFileName = \"/Users/kubansadyrov/Desktop/03-starting-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  //Бул жакта 5 useState бар\n  const [enteredEmail, setEnteredEmail] = useState(''); //Это отвечает за email \n\n  const [emailIsValid, setEmailIsValid] = useState(false); //Это отвечает за проверку email \n\n  const [enteredPassword, setEnteredPassword] = useState(''); //Это отвечает за пароль\n\n  const [passwordIsValid, setPasswordIsValid] = useState(false); //Это отвечает за проверку пороль\n\n  const [formIsValid, setFormIsValid] = useState(false); //Это отвечает за форма пустой болуп калса false болуп тура бериш керек форма толтурулган болсо true болот\n\n  const emailChangeHandler = event => {\n    //Это emailChangeHandler булар input тун ичинде OnChange={} менен чакырылат \n    setEnteredEmail(event.target.value); //Бул жерде ошолордун value син алып туруп enteredEmail дын ичине сактап жатабыз\n\n    setFormIsValid( //Мы вызываем здесь setFormIsValid\n    event.target.value.includes('@') && enteredPassword.trim().length > 6); //event.target.value email дын знычениясын алып жатабыз анан includes('@') включает ли он собачку @ эсли выключает анда true болуп калат а патом оператор && жана проверка enteredPassword.trim().length > 6 жазган паролубуз 6 дан жогору болсо парол туура жасылган деген логика бул жерде\n  };\n\n  const passwordChangeHandler = event => {\n    //Это passwordChangeHandler тоже самое passwordChangeHandler менен иштетекенде setFormIsValid сакырылса \n    setEnteredPassword(event.target.value);\n    setFormIsValid(event.target.value.trim().length > 6 && enteredEmail.includes('@')); //Бул жеред биринчи ошол парольду текшерет паролду жаздык туура эле бул жер true болот && жана деп биз ошол email ды текшерип койобуз email ды жазканбыз true болсо бул жер общий true кайтарат патом useState(true)деп сактап койот\n  };\n\n  const validateEmailHandler = () => {\n    //Бул функция кторый вот кайра ле ошол setEmailIsValid ди чакырып жатат \n    setEmailIsValid(enteredEmail.includes('@')); //Если собачкасы бар болсо значить email valid true калйтарып койот проста \n  };\n\n  const validatePasswordHandler = () => {\n    // Бул функция болсо \n    setPasswordIsValid(enteredPassword.trim().length > 6); //Пароль ду trim() кылып lebgth ны проверка кылып 6 > дан  жогору болсо бул деле true кайтарып койот\n  };\n\n  const submitHandler = event => {\n    //Бул жерде ошол жана setFormIsValid useState(true) эмнеге сактап койот десек бул жерде submit кылгында\n    event.preventDefault(); //Мы потом можем проверить форма толтурулдубу же толтурулбадыбы\n\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler //OnBlur метод емес event бул true и false алат смотря true,false то есть М: input тун ичи пустой бирок четтери кызыл болуп турат как будто ошибка ичине бирдеке жазсак ал жоголуп кетет это onBlur бул жоголбойт пока биз туура жазмайынча \n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"1JWCSciQG6vGj4IzLorPgx8mmgU=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/kubansadyrov/Desktop/03-starting-project/src/components/Login/Login.js"],"names":["React","useState","Card","classes","Button","Login","props","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailChangeHandler","event","target","value","includes","trim","length","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst Login = (props) => { //Бул жакта 5 useState бар\n  const [enteredEmail, setEnteredEmail] = useState('');//Это отвечает за email \n  const [emailIsValid, setEmailIsValid] = useState(false);//Это отвечает за проверку email \n  const [enteredPassword, setEnteredPassword] = useState('');//Это отвечает за пароль\n  const [passwordIsValid, setPasswordIsValid] = useState(false);//Это отвечает за проверку пороль\n  const [formIsValid, setFormIsValid] = useState(false); //Это отвечает за форма пустой болуп калса false болуп тура бериш керек форма толтурулган болсо true болот\n\n  const emailChangeHandler = (event) => { //Это emailChangeHandler булар input тун ичинде OnChange={} менен чакырылат \n    setEnteredEmail(event.target.value); //Бул жерде ошолордун value син алып туруп enteredEmail дын ичине сактап жатабыз\n\n    setFormIsValid( //Мы вызываем здесь setFormIsValid\n      event.target.value.includes('@') && enteredPassword.trim().length > 6\n    );//event.target.value email дын знычениясын алып жатабыз анан includes('@') включает ли он собачку @ эсли выключает анда true болуп калат а патом оператор && жана проверка enteredPassword.trim().length > 6 жазган паролубуз 6 дан жогору болсо парол туура жасылган деген логика бул жерде\n  };\n\n  const passwordChangeHandler = (event) => { //Это passwordChangeHandler тоже самое passwordChangeHandler менен иштетекенде setFormIsValid сакырылса \n    setEnteredPassword(event.target.value); \n\n    setFormIsValid( \n      event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    );//Бул жеред биринчи ошол парольду текшерет паролду жаздык туура эле бул жер true болот && жана деп биз ошол email ды текшерип койобуз email ды жазканбыз true болсо бул жер общий true кайтарат патом useState(true)деп сактап койот\n  };\n\n  const validateEmailHandler = () => { //Бул функция кторый вот кайра ле ошол setEmailIsValid ди чакырып жатат \n    setEmailIsValid(enteredEmail.includes('@')); //Если собачкасы бар болсо значить email valid true калйтарып койот проста \n  };\n\n  const validatePasswordHandler = () => { // Бул функция болсо \n    setPasswordIsValid(enteredPassword.trim().length > 6); //Пароль ду trim() кылып lebgth ны проверка кылып 6 > дан  жогору болсо бул деле true кайтарып койот\n  };\n\n  const submitHandler = (event) => { //Бул жерде ошол жана setFormIsValid useState(true) эмнеге сактап койот десек бул жерде submit кылгында\n    event.preventDefault(); //Мы потом можем проверить форма толтурулдубу же толтурулбадыбы\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}//OnBlur метод емес event бул true и false алат смотря true,false то есть М: input тун ичи пустой бирок четтери кызыл болуп турат как будто ошибка ичине бирдеке жазсак ал жоголуп кетет это onBlur бул жоголбойт пока биз туура жазмайынча \n          />\n        </div>\n        <div className={classes.actions}>\n          {/*  бул жакта кнопкабызда да disabled деген функциясы бар он будеть true в том случе если formIsValid польностю true болгондо */}\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login \n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}